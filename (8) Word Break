---------------------------------dp solution---------------------------------------
unordered_set<string>set;
   
    bool solve(int ind,string &s,vector<int>&dp)
    {
        if(ind==s.size())return dp[ind]=true;
       
        if(set.find(s.substr(ind,s.size()-ind))!=set.end())return dp[ind]= true;
        if(dp[ind]!=-1)return dp[ind];
        for(int i=ind;i<s.size();i++)
        {
            string temp=s.substr(ind,i-ind+1);
            if(set.find(temp)!=set.end()&& solve(i+1,s,dp))return dp[ind]=true;
        }
        return dp[ind]=false;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
       
        for(int i=0;i<wordDict.size();i++)set.insert(wordDict[i]);
         vector<int>dp(s.size(),-1);
        return solve(0,s,dp);
    }
-------------------------------------------------------------------------------------------------
